#pragma checksum "C:\Users\Gerim\Desktop\AnalisedeRepositorioGitHub\IC2020\Views\Repositories\DashBoard.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1ce0a512b106a861f6eb831763927dc49c5cb9ea"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Repositories_DashBoard), @"mvc.1.0.view", @"/Views/Repositories/DashBoard.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Repositories/DashBoard.cshtml", typeof(AspNetCore.Views_Repositories_DashBoard))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Gerim\Desktop\AnalisedeRepositorioGitHub\IC2020\Views\_ViewImports.cshtml"
using IC2020;

#line default
#line hidden
#line 1 "C:\Users\Gerim\Desktop\AnalisedeRepositorioGitHub\IC2020\Views\Repositories\DashBoard.cshtml"
using IC2020.Models;

#line default
#line hidden
#line 7 "C:\Users\Gerim\Desktop\AnalisedeRepositorioGitHub\IC2020\Views\Repositories\DashBoard.cshtml"
using Newtonsoft.Json;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1ce0a512b106a861f6eb831763927dc49c5cb9ea", @"/Views/Repositories/DashBoard.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3e0cdb9692461173cc7dbac5cbca5fe6befa101e", @"/Views/_ViewImports.cshtml")]
    public class Views_Repositories_DashBoard : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<ObjStructure>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datatables-responsive/css/responsive.bootstrap4.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/javascript"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/chart/Chart.PieceLabel.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(44, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 4 "C:\Users\Gerim\Desktop\AnalisedeRepositorioGitHub\IC2020\Views\Repositories\DashBoard.cshtml"
  
    ViewBag.Title = "DashBoard";

#line default
#line hidden
            BeginContext(112, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(114, 89, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "1ce0a512b106a861f6eb831763927dc49c5cb9ea5596", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(203, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(205, 96, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "1ce0a512b106a861f6eb831763927dc49c5cb9ea6849", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(301, 9, true);
            WriteLiteral("\r\n<script");
            EndContext();
            BeginWriteAttribute("src", " src=\"", 310, "\"", 358, 1);
#line 11 "C:\Users\Gerim\Desktop\AnalisedeRepositorioGitHub\IC2020\Views\Repositories\DashBoard.cshtml"
WriteAttributeValue("", 316, Url.Content("~/Scripts/jquery-1.10.2.js"), 316, 42, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(359, 42, true);
            WriteLiteral(" type=\"text/javascript\"></script>\r\n<script");
            EndContext();
            BeginWriteAttribute("src", " src=\"", 401, "\"", 459, 1);
#line 12 "C:\Users\Gerim\Desktop\AnalisedeRepositorioGitHub\IC2020\Views\Repositories\DashBoard.cshtml"
WriteAttributeValue("", 407, Url.Content("~/Scripts/jquery.unobtrusive-ajax.js"), 407, 52, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(460, 37, true);
            WriteLiteral(" type=\"text/javascript\"></script>\r\n\r\n");
            EndContext();
            BeginContext(497, 74, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1ce0a512b106a861f6eb831763927dc49c5cb9ea9070", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(571, 495, true);
            WriteLiteral(@"


<section class=""content"">
    <div class=""container-fluid"">
        <div class=""row"">
            <div class=""col-12"">
                <div class=""info-box bg-danger"">
                    <span class=""info-box-icon""><i class=""far fa-flag""></i></span>

                    <div class=""info-box-content"">
                        <span class=""info-box-text"">USUÁRIO/REPOSITÓRIO</span>
                        <span class=""info-box-text"" id=""valueDateC"">
                            ");
            EndContext();
            BeginContext(1067, 20, false);
#line 27 "C:\Users\Gerim\Desktop\AnalisedeRepositorioGitHub\IC2020\Views\Repositories\DashBoard.cshtml"
                       Write(Model.repo.full_name);

#line default
#line hidden
            EndContext();
            BeginContext(1087, 752, true);
            WriteLiteral(@"
                        </span>
                    </div>
                </div>
            </div>
        </div>
        <div class=""row"">
            <div class=""col-md-6"">

                <div class=""card card-danger card-outline"">
                    <div class=""card-header"">
                        <h3 class=""card-title"">
                            <i class=""far fa-chart-bar""></i>
                            DESENVOLVEDORES DE CADA VERSÃO
                        </h3>

                        <div class=""card-tools"">
                            <button type=""button"" class=""btn btn-tool"" data-card-widget=""collapse"">
                                <i class=""fas fa-minus""></i>
                            </button>
");
            EndContext();
            BeginContext(2043, 251, true);
            WriteLiteral("                        </div>\r\n                    </div>\r\n                    <div class=\"card-body\">\r\n                        <div class=\"table-responsive\">\r\n                            <table id=\"example1\" class=\"table table-hover\" height=\"100\">\r\n");
            EndContext();
#line 55 "C:\Users\Gerim\Desktop\AnalisedeRepositorioGitHub\IC2020\Views\Repositories\DashBoard.cshtml"
                                 if (Model.item.Count() == 0)
                                {

#line default
#line hidden
            BeginContext(2392, 177, true);
            WriteLiteral("                                    <tr>\r\n                                        <td colspan=\"10\">Não foram encontrados dados.</td>\r\n                                    </tr>\r\n");
            EndContext();
#line 60 "C:\Users\Gerim\Desktop\AnalisedeRepositorioGitHub\IC2020\Views\Repositories\DashBoard.cshtml"

                                }
                                else
                                {

#line default
#line hidden
            BeginContext(2679, 454, true);
            WriteLiteral(@"                                    <thead>
                                        <tr style=""background-color:#DE022A; color:white"">
                                            <th scope=""col"">Desenvolvedor</th>
                                            <th scope=""col"">Versão</th>
                                            <th scope=""col"">Data</th>
                                        </tr>
                                    </thead>
");
            EndContext();
#line 71 "C:\Users\Gerim\Desktop\AnalisedeRepositorioGitHub\IC2020\Views\Repositories\DashBoard.cshtml"



                                    foreach (var item in Model.item)
                                    {

#line default
#line hidden
            BeginContext(3248, 94, true);
            WriteLiteral("                                        <tr>\r\n                                            <td>");
            EndContext();
            BeginContext(3343, 17, false);
#line 77 "C:\Users\Gerim\Desktop\AnalisedeRepositorioGitHub\IC2020\Views\Repositories\DashBoard.cshtml"
                                           Write(item.author.login);

#line default
#line hidden
            EndContext();
            BeginContext(3360, 55, true);
            WriteLiteral("</td>\r\n                                            <td>");
            EndContext();
            BeginContext(3416, 13, false);
#line 78 "C:\Users\Gerim\Desktop\AnalisedeRepositorioGitHub\IC2020\Views\Repositories\DashBoard.cshtml"
                                           Write(item.tag_name);

#line default
#line hidden
            EndContext();
            BeginContext(3429, 55, true);
            WriteLiteral("</td>\r\n                                            <td>");
            EndContext();
            BeginContext(3485, 17, false);
#line 79 "C:\Users\Gerim\Desktop\AnalisedeRepositorioGitHub\IC2020\Views\Repositories\DashBoard.cshtml"
                                           Write(item.published_at);

#line default
#line hidden
            EndContext();
            BeginContext(3502, 54, true);
            WriteLiteral("</td>\r\n                                        </tr>\r\n");
            EndContext();
#line 81 "C:\Users\Gerim\Desktop\AnalisedeRepositorioGitHub\IC2020\Views\Repositories\DashBoard.cshtml"
                                    }
                                }

#line default
#line hidden
            BeginContext(3630, 745, true);
            WriteLiteral(@"                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <div class=""col-md-6"">
                <div class=""card card-danger card-outline"">
                    <div class=""card-header"">
                        <h3 class=""card-title"">
                            <i class=""far fa-chart-bar""></i>
                            TOTAL DE COMMITS DE CADA VERSÃO
                        </h3>

                        <div class=""card-tools"">
                            <button type=""button"" class=""btn btn-tool"" data-card-widget=""collapse"">
                                <i class=""fas fa-minus""></i>
                            </button>
");
            EndContext();
            BeginContext(4579, 2464, true);
            WriteLiteral(@"                        </div>
                    </div>
                    <div class=""card-body"">
                        <div class=""wrapper"">
                            <canvas id=""totalChart"" height=""303""></canvas>
                            <script>
                                //fetch('/Home/GetChart')
                                //    .then(res => res.json())
                                //    .then(data => {
                                //        console.log(data)
                                //        const name = data.map(x => x.name)
                                //        const total = data.map(x => parseInt(x.total))
                                var ctx = document.getElementById(""totalChart"");
                                var chart = new Chart(ctx, {
                                    type: 'pie',
                                    data: {
                                        datasets: [{ backgroundColor: ['rgb(255, 99, 132)', 'rgb(255, 199, 132)'");
            WriteLiteral(@", 'rgb(55, 99, 132)', 'rgba(0, 255, 0, 0.3)', ""#8e5ea2""], data: [72, 2, 2, 3, 1] }], labels: [""v14.12.0"", ""v14.11.0"", ""v14.10.1"", ""v12.18.4"", ""v10.22.1"",]
                                    },
                                    options: {
                                        responsive: true,
                                        title: {
                                            display: true,
                                            responsive: true
                                        },
                                        pieceLabel: {
                                            render: 'value',
                                            position: 'outside',
                                            segment: true,
                                            fontSize: 14,
                                            fontStyle: 'bold',
                                            fontColor: '#000',
                                            //fontFamily: '""Lucida Console""");
            WriteLiteral(@", Monaco, monospace'
                                        }
                                    }
                                });
                                //})
                                //.catch(err => console.log('err =>', err));
                            </script>
                        </div>
                    </div>
                </div>
            </div>
        </div>
");
            EndContext();
            BeginContext(7732, 608, true);
            WriteLiteral(@"        <div class=""row"">
            <div class=""col-12"">
                <div class=""card card-danger card-outline"">
                    <div class=""card-header"">
                        <h3 class=""card-title"">
                            <i class=""far fa-chart-bar""></i>
                            DATA x VERSÃO
                        </h3>

                        <div class=""card-tools"">
                            <button type=""button"" class=""btn btn-tool"" data-card-widget=""collapse"">
                                <i class=""fas fa-minus""></i>
                            </button>
");
            EndContext();
            BeginContext(8544, 328, true);
            WriteLiteral(@"                        </div>
                    </div>
                    <div class=""card-body"">
                        <div class=""wrapper"">
                            <canvas id=""mixed-chart"" width=""800"" height=""400""></canvas>

                            <script>
                                  var events = ");
            EndContext();
            BeginContext(8873, 49, false);
#line 181 "C:\Users\Gerim\Desktop\AnalisedeRepositorioGitHub\IC2020\Views\Repositories\DashBoard.cshtml"
                                          Write(Html.Raw(JsonConvert.SerializeObject(Model.item)));

#line default
#line hidden
            EndContext();
            BeginContext(8922, 2341, true);
            WriteLiteral(@"
                                     console.log(events)
                                const tag = events.map(x => x.tag_name)
                                const datetag = events.map(x => x.published_at)
                                var y = tag.map(s => parseFloat(s.slice(1)));
                                                                    new Chart(document.getElementById(""mixed-chart""), {
                                        type: 'line',
                                        data: {
                                            labels: datetag,
                                            datasets: [{
                                                data: y,
                                                label: ""Versão"",
                                                borderColor: ""#8e5ea2"",
                                                fill: false
                                            },
                                            ]
                                 ");
            WriteLiteral(@"       },
                                        options: {
                                            responsive: true,
                                            title: {
                                                display: true,
                                                text: 'INTERVALO DE TEMPO ENTRE AS VERSÕES',
                                                responsive: true
                                            }
                                        }
                                    });
                            </script>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class=""row"">
            <div class=""col-12"">

                <div class=""card card-danger card-outline"">
                    <div class=""card-header"">
                        <h3 class=""card-title"">
                            <i class=""far fa-chart-bar""></i>
                            INFORMAÇÕES DO REPOS");
            WriteLiteral(@"ITÓRIO
                        </h3>

                        <div class=""card-tools"">
                            <button type=""button"" class=""btn btn-tool"" data-card-widget=""collapse"">
                                <i class=""fas fa-minus""></i>
                            </button>
");
            EndContext();
            BeginContext(11467, 980, true);
            WriteLiteral(@"                        </div>
                    </div>
                    <div class=""card-body"">
                        <div class=""table-responsive"">
                            <table id=""example1"" class=""table table-hover"" height=""100"">

                                <thead>
                                    <tr style=""background-color:#DE022A; color:white"">
                                        <th scope=""col"">Id</th>
                                        <th scope=""col"">Nome</th>
                                        <th scope=""col"">Branch Principal</th>
                                        <th scope=""col"">Watchers/Starred</th>
                                        <th scope=""col"">Issues Abertas</th>
                                        <th scope=""col"">Forks</th>
                                    </tr>
                                </thead>
                                <tr>
                                    <td>");
            EndContext();
            BeginContext(12448, 13, false);
#line 247 "C:\Users\Gerim\Desktop\AnalisedeRepositorioGitHub\IC2020\Views\Repositories\DashBoard.cshtml"
                                   Write(Model.repo.id);

#line default
#line hidden
            EndContext();
            BeginContext(12461, 47, true);
            WriteLiteral("</td>\r\n                                    <td>");
            EndContext();
            BeginContext(12509, 20, false);
#line 248 "C:\Users\Gerim\Desktop\AnalisedeRepositorioGitHub\IC2020\Views\Repositories\DashBoard.cshtml"
                                   Write(Model.repo.full_name);

#line default
#line hidden
            EndContext();
            BeginContext(12529, 47, true);
            WriteLiteral("</td>\r\n                                    <td>");
            EndContext();
            BeginContext(12577, 25, false);
#line 249 "C:\Users\Gerim\Desktop\AnalisedeRepositorioGitHub\IC2020\Views\Repositories\DashBoard.cshtml"
                                   Write(Model.repo.default_branch);

#line default
#line hidden
            EndContext();
            BeginContext(12602, 47, true);
            WriteLiteral("</td>\r\n                                    <td>");
            EndContext();
            BeginContext(12650, 25, false);
#line 250 "C:\Users\Gerim\Desktop\AnalisedeRepositorioGitHub\IC2020\Views\Repositories\DashBoard.cshtml"
                                   Write(Model.repo.watchers_count);

#line default
#line hidden
            EndContext();
            BeginContext(12675, 47, true);
            WriteLiteral("</td>\r\n                                    <td>");
            EndContext();
            BeginContext(12723, 28, false);
#line 251 "C:\Users\Gerim\Desktop\AnalisedeRepositorioGitHub\IC2020\Views\Repositories\DashBoard.cshtml"
                                   Write(Model.repo.open_issues_count);

#line default
#line hidden
            EndContext();
            BeginContext(12751, 47, true);
            WriteLiteral("</td>\r\n                                    <td>");
            EndContext();
            BeginContext(12799, 16, false);
#line 252 "C:\Users\Gerim\Desktop\AnalisedeRepositorioGitHub\IC2020\Views\Repositories\DashBoard.cshtml"
                                   Write(Model.repo.forks);

#line default
#line hidden
            EndContext();
            BeginContext(12815, 230, true);
            WriteLiteral("</td>\r\n                                </tr>\r\n\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<ObjStructure> Html { get; private set; }
    }
}
#pragma warning restore 1591
