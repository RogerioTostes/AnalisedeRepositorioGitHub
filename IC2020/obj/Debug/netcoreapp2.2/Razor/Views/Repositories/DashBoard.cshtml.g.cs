#pragma checksum "D:\repos\repos\IC2020\IC2020\Views\Repositories\DashBoard.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c796dd071ad27c01e93389ab5f65745ed2629da6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Repositories_DashBoard), @"mvc.1.0.view", @"/Views/Repositories/DashBoard.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Repositories/DashBoard.cshtml", typeof(AspNetCore.Views_Repositories_DashBoard))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\repos\repos\IC2020\IC2020\Views\_ViewImports.cshtml"
using IC2020;

#line default
#line hidden
#line 2 "D:\repos\repos\IC2020\IC2020\Views\_ViewImports.cshtml"
using IC2020.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c796dd071ad27c01e93389ab5f65745ed2629da6", @"/Views/Repositories/DashBoard.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3e0cdb9692461173cc7dbac5cbca5fe6befa101e", @"/Views/_ViewImports.cshtml")]
    public class Views_Repositories_DashBoard : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<IC2020.Models.Repos>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datatables-responsive/css/responsive.bootstrap4.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/javascript"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/chart/Chart.PieceLabel.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(41, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 3 "D:\repos\repos\IC2020\IC2020\Views\Repositories\DashBoard.cshtml"
  
    ViewBag.Title = "DashBoard";

#line default
#line hidden
            BeginContext(84, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(86, 89, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "c796dd071ad27c01e93389ab5f65745ed2629da65333", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(175, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(177, 96, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "c796dd071ad27c01e93389ab5f65745ed2629da66586", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(273, 9, true);
            WriteLiteral("\r\n<script");
            EndContext();
            BeginWriteAttribute("src", " src=\"", 282, "\"", 330, 1);
#line 9 "D:\repos\repos\IC2020\IC2020\Views\Repositories\DashBoard.cshtml"
WriteAttributeValue("", 288, Url.Content("~/Scripts/jquery-1.10.2.js"), 288, 42, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(331, 42, true);
            WriteLiteral(" type=\"text/javascript\"></script>\r\n<script");
            EndContext();
            BeginWriteAttribute("src", " src=\"", 373, "\"", 431, 1);
#line 10 "D:\repos\repos\IC2020\IC2020\Views\Repositories\DashBoard.cshtml"
WriteAttributeValue("", 379, Url.Content("~/Scripts/jquery.unobtrusive-ajax.js"), 379, 52, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(432, 37, true);
            WriteLiteral(" type=\"text/javascript\"></script>\r\n\r\n");
            EndContext();
            BeginContext(469, 74, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c796dd071ad27c01e93389ab5f65745ed2629da68750", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(543, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
            BeginContext(917, 1633, true);
            WriteLiteral(@"
<section class=""content"">
    <div class=""container-fluid"">
        <div class=""row"">
            <div class=""col-12"">
                <div class=""info-box bg-danger"">
                    <span class=""info-box-icon""><i class=""far fa-flag""></i></span>

                    <div class=""info-box-content"">
                        <span class=""info-box-text"">USUÁRIO/REPOSITÓRIO</span>
                        <span class=""info-box-text"">nodejs/node</span>
                    </div>
                </div>
            </div>
        </div>
        <div class=""row"">
            <div class=""col-md-6"">

                <div class=""card card-danger card-outline"">
                    <div class=""card-header"">
                        <h3 class=""card-title"">
                            <i class=""far fa-chart-bar""></i>
                            DESENVOLVEDORES DE CADA VERSÃO
                        </h3>

                        <div class=""card-tools"">
                            <button type=""bu");
            WriteLiteral(@"tton"" class=""btn btn-tool"" data-card-widget=""collapse"">
                                <i class=""fas fa-minus""></i>
                            </button>
                            <button type=""button"" class=""btn btn-tool"" data-card-widget=""remove"">
                                <i class=""fas fa-times""></i>
                            </button>
                        </div>
                    </div>
                    <div class=""card-body"">
                        <div class=""table-responsive"">
                            <table id=""example1"" class=""table table-hover"" height=""100"">
");
            EndContext();
            BeginContext(2962, 1710, true);
            WriteLiteral(@"                                <thead>
                                    <tr style=""background-color:#DE022A; color:white"">
                                        <th scope=""col"">Desenvolvedor</th>
                                        <th scope=""col"">Versão</th>
                                        <th scope=""col"">Data</th>
                                    </tr>
                                </thead>
                                <tr>
                                    <td>richardlau</td>
                                    <td>v14.11.0</td>
                                    <td>2020-09-15T20:22:48Z</td>

                                </tr>
                                <tr>
                                    <td>richardlau</td>
                                    <td>v14.10.1</td>
                                    <td>2020-09-10T14:42:20Z</td>
                                </tr>
                                <tr>
                                    <td>richar");
            WriteLiteral(@"dlau</td>
                                    <td>v14.10.0</td>
                                    <td>2020-09-08T15:02:59Z</td>
                                </tr>
                                <tr>
                                    <td>BethGriggs</td>
                                    <td>v12.18.4</td>
                                    <td>2020-09-15T20:40:35Z</td>
                                </tr>
                                <tr>
                                    <td>BethGriggs</td>
                                    <td>v10.22.1</td>
                                    <td>2020-09-15T20:32:02Z</td>
                                </tr>

");
            EndContext();
            BeginContext(5452, 3410, true);
            WriteLiteral(@"                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <div class=""col-md-6"">
                <div class=""card card-danger card-outline"">
                    <div class=""card-header"">
                        <h3 class=""card-title"">
                            <i class=""far fa-chart-bar""></i>
                            TOTAL DE COMMITS DE CADA VERSÃO
                        </h3>

                        <div class=""card-tools"">
                            <button type=""button"" class=""btn btn-tool"" data-card-widget=""collapse"">
                                <i class=""fas fa-minus""></i>
                            </button>
                            <button type=""button"" class=""btn btn-tool"" data-card-widget=""remove"">
                                <i class=""fas fa-times""></i>
                            </button>
                        </div>
                    </div>
                   ");
            WriteLiteral(@" <div class=""card-body"">
                        <div class=""wrapper"">
                            <canvas id=""totalChart"" height=""303""></canvas>
                            <script>
                                //fetch('/Home/GetChart')
                                //    .then(res => res.json())
                                //    .then(data => {
                                //        console.log(data)
                                //        const name = data.map(x => x.name)
                                //        const total = data.map(x => parseInt(x.total))
                                var ctx = document.getElementById(""totalChart"");
                                var chart = new Chart(ctx, {
                                    type: 'pie',
                                    data: {
                                        datasets: [{ backgroundColor: ['rgb(255, 99, 132)', 'rgb(255, 199, 132)', 'rgb(55, 99, 132)', 'rgba(0, 255, 0, 0.3)', ""#8e5ea2""], data: [10, 5, 3, 15, ");
            WriteLiteral(@"1] }], labels: [""v14.11.0"", ""v14.10.1"", ""v14.10.0"", ""v12.18.4"", ""v10.22.1"",]
                                    },
                                    options: {
                                        responsive: true,
                                        title: {
                                            display: true,
                                            responsive: true
                                        },
                                        pieceLabel: {
                                            render: 'value',
                                            position: 'outside',
                                            segment: true,
                                            fontSize: 14,
                                            fontStyle: 'bold',
                                            fontColor: '#000',
                                            //fontFamily: '""Lucida Console"", Monaco, monospace'
                                        }
             ");
            WriteLiteral(@"                       }
                                });
                                //})
                                //.catch(err => console.log('err =>', err));
                            </script>
                        </div>
                    </div>
                </div>
            </div>
        </div>
");
            EndContext();
            BeginContext(9551, 4761, true);
            WriteLiteral(@"        <div class=""row"">
            <div class=""col-12"">
                <div class=""card card-danger card-outline"">
                    <div class=""card-header"">
                        <h3 class=""card-title"">
                            <i class=""far fa-chart-bar""></i>
                            DATA x VERSÃO
                        </h3>

                        <div class=""card-tools"">
                            <button type=""button"" class=""btn btn-tool"" data-card-widget=""collapse"">
                                <i class=""fas fa-minus""></i>
                            </button>
                            <button type=""button"" class=""btn btn-tool"" data-card-widget=""remove"">
                                <i class=""fas fa-times""></i>
                            </button>
                        </div>
                    </div>
                    <div class=""card-body"">
                        <div class=""wrapper"">
                            <canvas id=""mixed-chart"" width=""800""");
            WriteLiteral(@" height=""400""></canvas>
                            <script>
                                //fetch('/Home/GetPluviometricHtml')
                                //    .then(res => res.json())
                                //    .then(data1 => {
                                //        console.log(data1)
                                //        const dataM = data1.map(x => x.dataM)
                                //        const totalDia = data1.map(x => parseInt(x.totalDia))
                                //        const pluviometrico = data1.map(x => parseInt(x.pluviometro))
                                //        console.log(totalDia)
                                //        console.log(pluviometrico)

                                //new Chart(document.getElementById(""mixed-chart""), {
                                //    type: 'bar',
                                //    data: {
                                //        label: ""FALSEK (TOTAL DIA ANTERIOR)"",
                      ");
            WriteLiteral(@"          //        datasets: [{ backgroundColor: ""rgba(255,0,0,0.3)"", data: totalDia, label: ""FALSEK (TOTAL DIA ANTERIOR)"", },
                                //        {
                                //            label: ""PLUVIÔMETRO (MM)"",
                                //            type: ""line"",
                                //            borderColor: ""#8e5ea2"",
                                //            data: pluviometrico,
                                //            fill: false
                                //        },

                                //        ], labels: dataM
                                //    },
                                //    options: {
                                //        responsive: true,
                                //        title: {
                                //            display: true,
                                //            responsive: true
                                //        }
                                /");
            WriteLiteral(@"/    }
                                //});
                                new Chart(document.getElementById(""mixed-chart""), {
                                    type: 'line',
                                    data: {
                                        labels: [""v14.11.0"", ""v14.10.1"", ""v14.10.0"", ""v12.18.4"", ""v10.22.1""],
                                        datasets: [{
                                            data: [5, 2, 1, 0, 0],
                                            label: ""Versão"",
                                            borderColor: ""#8e5ea2"",
                                            fill: false
                                        },
                                        ]
                                    },
                                    options: {
                                        responsive: true,
                                        title: {
                                            display: true,
                               ");
            WriteLiteral(@"             text: 'INTERVALO DE TEMPO ENTRE AS VERSÕES',
                                            responsive: true
                                        }
                                    }
                                });



                                                                                            //})
                                                                                            //.catch(err => console.log('err =>', err));
                            </script>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<IC2020.Models.Repos>> Html { get; private set; }
    }
}
#pragma warning restore 1591
